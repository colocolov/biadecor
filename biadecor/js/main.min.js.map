{"version":3,"sources":["dinam-adap.js","main-slider.js","modal.js","nav.js","scrollTo.js"],"names":[],"mappingslLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// // Dynamic Adapt v.1\r\n// // HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\r\n// // e.x. data-da=\".item,992,2\"\r\n// // Andrikanych Yevhen 2020\r\n// // https://www.youtube.com/c/freelancerlifestyle\r\n\r\n// \"use strict\";\r\n\r\n// function DynamicAdapt(type) {\r\n//   this.type = type;\r\n// }\r\n\r\n// DynamicAdapt.prototype.init = function () {\r\n//   const _this = this;\r\n//   // массив объектов\r\n//   this.оbjects = [];\r\n//   this.daClassname = \"_dynamic_adapt_\";\r\n//   // массив DOM-элементов\r\n//   this.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n//   // наполнение оbjects объктами\r\n//   for (let i = 0; i < this.nodes.length; i++) {\r\n//     const node = this.nodes[i];\r\n//     const data = node.dataset.da.trim();\r\n//     const dataArray = data.split(\",\");\r\n//     const оbject = {};\r\n//     оbject.element = node;\r\n//     оbject.parent = node.parentNode;\r\n//     оbject.destination = document.querySelector(dataArray[0].trim());\r\n//     оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n//     оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n//     оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n//     this.оbjects.push(оbject);\r\n//   }\r\n\r\n//   this.arraySort(this.оbjects);\r\n\r\n//   // массив уникальных медиа-запросов\r\n//   this.mediaQueries = Array.prototype.map.call(\r\n//     this.оbjects,\r\n//     function (item) {\r\n//       return (\r\n//         \"(\" +\r\n//         this.type +\r\n//         \"-width: \" +\r\n//         item.breakpoint +\r\n//         \"px),\" +\r\n//         item.breakpoint\r\n//       );\r\n//     },\r\n//     this\r\n//   );\r\n//   this.mediaQueries = Array.prototype.filter.call(\r\n//     this.mediaQueries,\r\n//     function (item, index, self) {\r\n//       return Array.prototype.indexOf.call(self, item) === index;\r\n//     }\r\n//   );\r\n\r\n//   // навешивание слушателя на медиа-запрос\r\n//   // и вызов обработчика при первом запуске\r\n//   for (let i = 0; i < this.mediaQueries.length; i++) {\r\n//     const media = this.mediaQueries[i];\r\n//     const mediaSplit = String.prototype.split.call(media, \",\");\r\n//     const matchMedia = window.matchMedia(mediaSplit[0]);\r\n//     const mediaBreakpoint = mediaSplit[1];\r\n\r\n//     // массив объектов с подходящим брейкпоинтом\r\n//     const оbjectsFilter = Array.prototype.filter.call(\r\n//       this.оbjects,\r\n//       function (item) {\r\n//         return item.breakpoint === mediaBreakpoint;\r\n//       }\r\n//     );\r\n//     matchMedia.addListener(function () {\r\n//       _this.mediaHandler(matchMedia, оbjectsFilter);\r\n//     });\r\n//     this.mediaHandler(matchMedia, оbjectsFilter);\r\n//   }\r\n// };\r\n\r\n// DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n//   if (matchMedia.matches) {\r\n//     for (let i = 0; i < оbjects.length; i++) {\r\n//       const оbject = оbjects[i];\r\n//       оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n//       this.moveTo(оbject.place, оbject.element, оbject.destination);\r\n//     }\r\n//   } else {\r\n//     for (let i = 0; i < оbjects.length; i++) {\r\n//       const оbject = оbjects[i];\r\n//       if (оbject.element.classList.contains(this.daClassname)) {\r\n//         this.moveBack(оbject.parent, оbject.element, оbject.index);\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // Функция перемещения\r\n// DynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n//   element.classList.add(this.daClassname);\r\n//   if (place === \"last\" || place >= destination.children.length) {\r\n//     destination.insertAdjacentElement(\"beforeend\", element);\r\n//     return;\r\n//   }\r\n//   if (place === \"first\") {\r\n//     destination.insertAdjacentElement(\"afterbegin\", element);\r\n//     return;\r\n//   }\r\n//   destination.children[place].insertAdjacentElement(\"beforebegin\", element);\r\n// };\r\n\r\n// // Функция возврата\r\n// DynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n//   element.classList.remove(this.daClassname);\r\n//   if (parent.children[index] !== undefined) {\r\n//     parent.children[index].insertAdjacentElement(\"beforebegin\", element);\r\n//   } else {\r\n//     parent.insertAdjacentElement(\"beforeend\", element);\r\n//   }\r\n// };\r\n\r\n// // Функция получения индекса внутри родителя\r\n// DynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n//   const array = Array.prototype.slice.call(parent.children);\r\n//   return Array.prototype.indexOf.call(array, element);\r\n// };\r\n\r\n// // Функция сортировки массива по breakpoint и place\r\n// // по возрастанию для this.type = min\r\n// // по убыванию для this.type = max\r\n// DynamicAdapt.prototype.arraySort = function (arr) {\r\n//   if (this.type === \"min\") {\r\n//     Array.prototype.sort.call(arr, function (a, b) {\r\n//       if (a.breakpoint === b.breakpoint) {\r\n//         if (a.place === b.place) {\r\n//           return 0;\r\n//         }\r\n\r\n//         if (a.place === \"first\" || b.place === \"last\") {\r\n//           return -1;\r\n//         }\r\n\r\n//         if (a.place === \"last\" || b.place === \"first\") {\r\n//           return 1;\r\n//         }\r\n\r\n//         return a.place - b.place;\r\n//       }\r\n\r\n//       return a.breakpoint - b.breakpoint;\r\n//     });\r\n//   } else {\r\n//     Array.prototype.sort.call(arr, function (a, b) {\r\n//       if (a.breakpoint === b.breakpoint) {\r\n//         if (a.place === b.place) {\r\n//           return 0;\r\n//         }\r\n\r\n//         if (a.place === \"first\" || b.place === \"last\") {\r\n//           return 1;\r\n//         }\r\n\r\n//         if (a.place === \"last\" || b.place === \"first\") {\r\n//           return -1;\r\n//         }\r\n\r\n//         return b.place - a.place;\r\n//       }\r\n\r\n//       return b.breakpoint - a.breakpoint;\r\n//     });\r\n//     return;\r\n//   }\r\n// };\r\n\r\n// const da = new DynamicAdapt(\"max\");\r\n// da.init();\r\n","// слайдер на главной\nconst headerSlider = new Swiper(\".main-slider\", {\n  // speed: 800,\n  loop: true,\n  navigation: {\n    nextEl: \".main-slider__btn-next\",\n    prevEl: \".main-slider__btn-prev\",\n    clickable: true,\n  },\n  //эффект перехода слайда (только если показ по 1-му слайду)\n  // effect: \"fade\",\n  // fadeEffect: {\n  //   crossFade: true,\n  // },\n  // переключение при клике на слайд\n  // slideToClickedSlide: true,\n  // // отключение прокрутки при наведении мыши\n  // on: {\n  //   init() {\n  //     this.el.addEventListener(\"mouseenter\", () => {\n  //       this.autoplay.stop();\n  //     });\n\n  //     this.el.addEventListener(\"mouseleave\", () => {\n  //       this.autoplay.start();\n  //     });\n  //   },\n  // },\n  //\n});\n//----- END\n","const modal = document.querySelector(\".modal\");\r\nconst modalBtn = document.querySelectorAll(\"[data-toggle=modal]\");\r\nconst modalCloseBtn = document.querySelector(\".modal__close\");\r\n\r\nmodal.addEventListener(\"click\", (e) => {\r\n  const isModal = e.target.closest(\".modal__inner\");\r\n  if (!isModal) {\r\n    removeActive();\r\n  }\r\n});\r\n\r\nmodalBtn.forEach((el) => {\r\n  el.addEventListener(\"click\", (e) => {\r\n    modal.classList.add(\"_active\");\r\n    document.body.classList.add(\"_lock\");\r\n  });\r\n});\r\n\r\nmodalCloseBtn.addEventListener(\"click\", removeActive);\r\n\r\nfunction removeActive() {\r\n  modal.classList.remove(\"_active\");\r\n  document.body.classList.remove(\"_lock\");\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  if (e.key === \"Escape\" || e.code === \"Escape\") {\r\n    removeActive();\r\n  }\r\n});\r\n","// мобильное меню\n\n// меню бургер\nconst iconMenu = document.querySelector(\".menu__icon\");\nconst menuBody = document.querySelector(\".menu__body\");\nconst menuLink = document.querySelector(\".menu__item\");\nif (iconMenu) {\n  iconMenu.addEventListener(\"click\", function (e) {\n    document.body.classList.toggle(\"_lock\");\n    iconMenu.classList.toggle(\"_active\");\n    menuBody.classList.toggle(\"_active\");\n  });\n}\n// закрытие при клике\nmenuLink.forEach((item) => {\n  item.addEventListener(\"click\", () => {\n    document.body.classList.remove(\"_lock\");\n    iconMenu.classList.remove(\"_active\");\n    menuBody.classList.remove(\"_active\");\n  });\n});\n","const scrollBtn = document.querySelector(\".roller__top .roller__btn\");\n\nscrollBtn.addEventListener(\"click\", () => {\n  console.log(scrollBtn);\n});\n"]}